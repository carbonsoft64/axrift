import telebot
from telebot import types
import time
import os
bot = telebot.TeleBot('[TOKEN]')

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
	msg = message.text
	id = message.from_user.id
	idstr=str(id)
	fca = '·éØ…ì·óæ‚Ñæ‚àÇŒµ—ë‚ôÖ·É≥‡∏ô≈´·è¶·èÅ·ó∞‚Ñç·ª¢‚ãí·ñò‚Ñ≠œÑ…£·õÑœá≈≥‡©´·ô°‡™ñ—£”π‡ßÆ„É®‡®†—è,Ô∏ô?·•Ñ|„ÄÇùï¨·è∞‚òæ·ó´Œµ·ö©·é∂‚Ñç·é•‚Ñë·è¶»¥·ó∞‚ÑïœÉ·ñò‚Ñö·ö±‡∞ïœÑ‡∏ô·πΩ‡∏ú√ó…£‚Ñ§·éØ…ì·óæ‚Ñæ‚àÇŒµ—ë‚ôÖ·É≥‡∏ô≈´·è¶·èÅ·ó∞‚Ñç·ª¢‚ãí·ñò‚Ñ≠œÑ…£·õÑœá≈≥‡©´·ô°‡™ñ—£”π‡ßÆ„É®‡®†—èùï¨·è∞‚òæ·ó´Œµ·ö©·é∂‚Ñç·é•‚Ñë·è¶»¥·ó∞‚ÑïœÉ·ñò‚Ñö·ö±‡∞ïœÑ‡∏ô·πΩ‡∏ú√ó…£‚Ñ§'
	defunia = '–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è,:?!|.abcdefghijklmnopqrstuvwxyz–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–ØABCDEFGHIJKLMNOPQRSTUVWXYZ'
	#initialization
	try:
		fctmp = open(idstr+'.fc', 'r')
		fc = fctmp.read()
		fctmp.close()
		langfile = open(idstr+'.data', 'r')
		lang = langfile.read()
		langfile.close()
		defunifile = open(idstr+'.dfn', 'r')
		defuni = defunifile.read()
		defunifile.close()
	except Exception:
		if msg!= '/start':
			bot.send_message(id, 'Firstly send /start!')
			msg = ''
	try:
		hreffile = open('href.dat', 'r')
		href = hreffile.read()
		hreffile.close()
	except Exception:
		hreffile = open('href.dat', 'w')
		href = 't.me/axrift'
		hreffile.write(href)
		hreffile.close()
	rootfile = open('root.dat', 'a')
	rootfile.close()
	rootfile = open('root.dat', 'r')
	root = rootfile.read()
	rootfile.close()
	
	
	#markup = types.									ReplyKeyboardMarkup(row_width=2)
	#markup.add(types.KeyboardButton('3'))
	#bot.send_message(id, 'fj', reply_markup=markup)
	
	
	#message reader & sender
	result = ''
	msggg = msg
	if msg == '/start':
		fctmp = open(idstr+'.fc', 'w')
		fctmp.write(fca)
		fctmp.close()
		defunifile = open(idstr+'.dfn', 'w')
		defunifile.write(defunia)
		defunifile.close()
		
		keyboard = types.InlineKeyboardMarkup()
		key_eng = types.InlineKeyboardButton(text='ENüá∫üá∏', callback_data='eng')
		keyboard.add(key_eng)
		key_rus = types.InlineKeyboardButton(text='RUüí©', callback_data='rus')
		keyboard.add(key_rus)
		key_ukr = types.InlineKeyboardButton(text='UAüá∫üá¶', callback_data='ukr')
		keyboard.add(key_ukr)
		bot.send_message(message.from_user.id, text="Choose your language:", reply_markup=keyboard)
	
	elif msg.find('/font ') != -1:
		try:
			msg = msg[6:]
			newfontfile = open(msg+'.fc', 'r')
			newfont = newfontfile.read()
			newfontfile.close()
			newdfnfile = open(msg+'.dfn', 'r')
			newdfn = newdfnfile.read()
			newdfnfile.close()
			fctmp = open(idstr+'.fc', 'w')
			fctmp.write(newfont)
			fctmp.close()
			defunifile = open(idstr+'.dfn', 'w')
			defunifile.write(newdfn)
			defunifile.close()
			verdict = 'Successfully changed font to '
			if lang == 'RUS':
				verdict = '–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω —à—Ä–∏—Ñ—Ç –Ω–∞ '
			if lang == 'UKR':
				verdict = '–£—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–∏–π —à—Ä–∏—Ñ—Ç –Ω–∞ '
			verdict += '`'+msg+'`'+'.'
			bot.send_message(id, verdict, parse_mode='Markdown')
		except Exception:
			verdict= 'Font not fond.'
			if lang == 'RUS': verdict= '–®—Ä–∏—Ñ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.'
			if lang == 'UKR': verdict = '–®—Ä–∏—Ñ—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.'
			bot.send_message(id, )
			
	#admin
	elif msg.find('\\replacehref ') != -1:
		if root.find(idstr+' ') != -1:
			hreffile = open('href.dat', 'w')
			href = msg[13:]
			hreffile.write(href)
			hreffile.close()
			bot.send_message(id, 'Href changed successfully!')
		else:
			bot.send_message(id, 'You haven\'t permissions to change href!')
	elif msg.find('\\send')==0:
		msg = msg[5:]
		if root.find(idstr+' ') != -1:
			try:
				i = 0
				while msg[i]!=' ': i+=1
				sid = msg[:i]
				msg = msg[i+1:]
				bot.send_message(int(sid), msg)
				bot.send_message(id, 'Successfully sended message to id\n'+sid+' with text\n'+msg)
			except Exception:
				bot.send_message(id, 'ERROR: False format or permission denied!')
		else:
			bot.send_message(id, 'You haven\'t permissions to send messages!')
	#noadmin
			
	elif msg.find('/create ') != -1:
		fontname = msg[8:]
		try:
			fontfile = open(fontname+'.dfn', 'r')
			csh = fontfile.read()
			fontfile.close()
			verdict = 'Font with this name alredy is used.'
			if lang == 'RUS': verdict = '–®—Ä–∏—Ñ—Ç —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.'
			if lang == 'UKR': verdict = '–®—Ä–∏—Ñ—Ç –∑ —Ç–∞–∫–∏–º —ñ–º\'—è–º –≤–∂–µ —ñ—Å–Ω—É—î.'
			bot.send_message(id, verdict)
		except Exception:
			try:
				isint = int(fontname)
				verdict = 'Font name can not be a number.'
				if lang == 'RUS': verdict = '–ò–º—è —à—Ä–∏—Ñ—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–∫–ª–∞–¥–∞—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä.'
				if lang == 'UKR': verdict = '–ù–∞–∑–≤–∞ —à—Ä–∏—Ñ—Ç–∞ –Ω–µ –ø–æ–≤–∏–Ω–Ω–∞ —Å–∫–ª–∞–¥–∞—Ç–∏—Å—è —Ç—ñ–ª—å–∫–∏ —ñ–∑ —Ü–∏—Ñ—Ä.'
				bot.send_message(id, verdict)
			except Exception:
				newfontfc = open(fontname+'.fc', 'a')
				newfontdfn = open(fontname+'.dfn', 'a')
				newfontfc.close()
				newfontdfn.close()
				fontrootfile = open(fontname+'.root', 'a')
				fontrootfile.write(idstr)
				fontrootfile.close()
				verdict = 'Font successfully created. Add to it nice letters by using /add !'
				if lang == 'RUS': verdict = '–®—Ä–∏—Ñ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –î–æ–±–∞–≤—Ç–µ –≤ –Ω–µ–≥–æ –∫—Ä–∞—Å–∏–≤—ã–µ –±—É–∫–≤—ã —Å –ø–æ–º–æ—â—å—é /add !'
				if lang == 'UKR': verdict = '–®—Ä–∏—Ñ—Ç —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π. –î–æ–±–∞–≤—Ç–µ –≤ –Ω—å–æ–≥–æ –∫—Ä–∞—Å–∏–≤—ñ –ª—ñ—Ç–µ—Ä–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é /add !'
				bot.send_message(id, verdict)
				
	elif(msg.find("/add")==0):
		try:
			msg = msg[5:]
			#Removing fontname
			i = 0
			while msg[i]!=' ':
				i+=1
			nfontname = msg[:i]
			msg =msg[i+1:];
			
			i = 0
			while msg[i]!=' ':
				i+=1
			nfontdfn = msg[:i]
			nfontfc = msg[i+1:]
			#bot.send_message(id, 'Font Name: '+nfontname+ '\nDfn: '+nfontdfn+'\nFc: '+nfontfc)
			try:
				rootfontfile = open(nfontname+'.root', 'r')
				rootfont = rootfontfile.read()
				rootfontfile.close()
				if id != int(rootfont):
					verdict = 'You haven\'t permissions to do this!'
					if lang == 'RUS':
						verdict = '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ!'
					if lang == 'UKR': verdict = '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤ –¥–ª—è —Ü—å–æ–≥–æ!'
					bot.send_message(id, verdict)
				else:
					fontdfnf = open(nfontname+'.dfn', 'r')
					fontfcf = open(nfontname+'.fc', 'r')
					fontdfn=fontdfnf.read()
					fontfc=fontfcf.read()
					fontdfnf.close()
					fontfcf.close()
					
					fontdfnf = open(nfontname+'.dfn', 'w')
					fontfcf = open(nfontname+'.fc', 'w')
					fontdfnf.write(nfontdfn+fontdfn)
					fontfcf.write(nfontfc+fontfc)
					fontdfnf.close()
					fontfcf.close()
					verdict = 'Successful adding changes!'
					if lang=='RUS':
						verdict = '–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!'
					if lang == 'UKR': verdict = '–ó–º—ñ–Ω–∏ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω—ñ!'
					bot.send_message(id, verdict)
			except Exception:
				verdict = 'Font doesn\'t exists!'
				if lang == 'RUS':
					verdict = '–≠—Ç–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!'
				if lang == 'UKR': verdict = '–¶—å–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞ –Ω–µ —ñ—Å–Ω—É—î!'
				bot.send_message(id, verdict)
		except Exception:
			verdict = 'Error: false format! Read /guide!'
			if lang == 'RUS':
				verdict = '–û—à–∏–±–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ /guide!'
			if lang == 'UKR': verdict = '–ü–æ–º–∏–ª–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç! –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ /guide!'
			bot.send_message(id, verdict)
	elif msg.find('/remove')==0:
		try:
			msg = msg[8:]
			rootfile = open(msg+'.root', 'r')
			fontroot = int(rootfile.read())
			rootfile.close()
			if fontroot != id:
				verdict ='You haven\'t permissions to do this!'
				if lang == 'RUS': verdict = '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ!'
				if lang == 'UKR': verdict = '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤ –¥–ª—è —Ü—å–æ–≥–æ!'
				bot.send_message(id, verdict)
			else:
				os.remove(msg+'.root')
				os.remove(msg+'.fc')
				os.remove(msg+'.dfn')
				verdict = 'Successfully removed font '
				if lang == 'RUS': verdict = '–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω —à—Ä–∏—Ñ—Ç '
				if lang == 'UKR': verdict = '–£—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–∏–π —à—Ä–∏—Ñ—Ç '
				bot.send_message(id, verdict+'\"'+msg+'\"')
		except Exception:
			verdict = 'Error: false format or font doesn\'t exists! Read /guide!'
			if lang == 'RUS': verdict = '–û—à–∏–±–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–ª–∏ —à—Ä–∏—Ñ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ /guide!'
			if lang == 'UKR': verdict = '–ü–æ–º–∏–ª–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∞–±–æ —à—Ä–∏—Ñ—Ç –Ω–µ —ñ—Å–Ω—É—î! –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ /guide!'
			bot.send_message(id, verdict)
	elif msg == '/fonts':
		verdict = 'Official fonts:\n'
		if lang == 'RUS': verdict = '–û—Ñ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã:\n'
		if lang == 'UKR': verdict = '–û—Ñ—ñ—Ü—ñ–π–Ω—ñ —à—Ä–∏—Ñ—Ç–∏:\n'
		
		fontsfile = open('fonts.dat', 'a')
		fontsfile.close()
		
		fontsfile = open('fonts.dat', 'r')
		verdict += fontsfile.read()
		fontsfile.close()
		bot.send_message(id, verdict)
	elif msg == '/support':
		verdict = 'If you have some errors or ideas - contact with me: @likespro_official'
		if lang=='RUS': verdict = '–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –æ—à–∏–±–∫–∏ –∏–ª–∏ –∏–¥–µ–∏, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π: @likespro_official'
		if lang == 'UKR': verdict = '–Ø–∫—â–æ —É –≤–∞—Å —î —è–∫—ñ—Å—å –ø–æ–º–∏–ª–∫–∏ –∞–±–æ —ñ–¥–µ—ó, —Ç–æ –∑–≤\'—è–∂—ñ—Ç—å—Å—è –∑—ñ –º–Ω–æ—é: @likespro_official'
		bot.send_message(id, verdict)
	elif msg == '/guide' :
		verdict = 'Type and send me a text/message so I can make the letters look pretty!\n***Ext.  features:***\n‚Ä¢ Change the font with /font \[font]!\n‚Ä¢ Create your font with /create \[name]!\n‚Ä¢ Add characters to your font with /add \[name_of_your_font] \[characters_to_replace  ] \[corresponding_characters_to_replace]\n‚Ä¢ Remove your font with /remove \[name_of_your_font]\n***Standard fonts:***\n‚Ä¢ Axrift\n‚Ä¢ Rune\n‚Ä¢ Copt'
		if lang == 'RUS':
			verdict = '–ù–∞–±–µ—Ä–∏—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç/—Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —è —Å–¥–µ–ª–∞–ª –±—É–∫–≤—ã –∫—Ä–∞—Å–∏–≤—ã–º–∏!\n***–î–æ–ø. –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:***\n‚Ä¢ –ü–æ–º–µ–Ω—è–π—Ç–µ —à—Ä–∏—Ñ—Ç –∫–æ–º–∞–Ω–¥–æ–π /font \[—à—Ä–∏—Ñ—Ç]!\n‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π —à—Ä–∏—Ñ—Ç –∫–æ–º–∞–Ω–¥–æ–π /create \[–Ω–∞–∑–≤–∞–Ω–∏–µ]!\n‚Ä¢ –î–æ–±–∞–≤—Ç–µ –≤ —Å–≤–æ–π —à—Ä–∏—Ñ—Ç —Å–∏–º–≤–æ–ª—ã –∫–æ–º–∞–Ω–¥–æ–π /add \[–Ω–∞–∑–≤–∞–Ω–∏–µ_–≤–∞—à–µ–≥–æ_—à—Ä–∏—Ñ—Ç–∞] \[—Å–∏–º–≤–æ–ª—ã_–∫–æ—Ç–æ—Ä—ã–µ_–Ω–∞–¥–æ_–∑–∞–º–µ–Ω–∏—Ç—å] \[—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ_—Å–∏–º–≤–æ–ª—ã_–¥–ª—è_–∑–∞–º–µ–Ω—ã]\n‚Ä¢ –£–¥–∞–ª–∏—Ç–µ —Å–≤–æ–π —à—Ä–∏—Ñ—Ç –∫–æ–º–∞–Ω–¥–æ–π /remove \[–Ω–∞–∑–≤–∞–Ω–∏–µ_–≤–∞—à–µ–≥–æ_—à—Ä–∏—Ñ—Ç–∞]\n***–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã:***\n‚Ä¢ Axrift\n‚Ä¢ Rune\n‚Ä¢ Copt'
		if lang == 'UKR':
			verdict = '–ù–∞–±–µ—Ä—ñ—Ç—å —Ç–∞ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ —Ç–µ–∫—Å—Ç/–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ–± —è –∑—Ä–æ–±–∏–≤ –ª—ñ—Ç–µ—Ä–∏ –≥–∞—Ä–Ω–∏–º–∏!\n***–î–æ–ø.  –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ:***\n‚Ä¢ –ü–æ–º—ñ–Ω—è–π—Ç–µ —à—Ä–∏—Ñ—Ç –∫–æ–º–∞–Ω–¥–æ—é /font \[—à—Ä–∏—Ñ—Ç]!\n‚Ä¢ –°—Ç–≤–æ—Ä—ñ—Ç—å —Å–≤—ñ–π —à—Ä–∏—Ñ—Ç –∫–æ–º–∞–Ω–¥–æ—é /create \[–Ω–∞–∑–≤–∞]!\n‚Ä¢ –î–æ–¥–∞–π—Ç–µ —É —Å–≤—ñ–π —à—Ä–∏—Ñ—Ç —Å–∏–º–≤–æ–ª–∏ –∫–æ–º–∞–Ω–¥–æ—é /add \[–Ω–∞–∑–≤–∞_–≤–∞—à–æ–≥–æ_—à—Ä–∏—Ñ—Ç—É] \[—Å–∏–º–≤–æ–ª–∏_—è–∫—ñ_—Ç—Ä–µ–±–∞_–∑–∞–º—ñ–Ω–∏—Ç–∏] [–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ_—Å–∏–º–≤–æ–ª–∏_–¥–ª—è_–∑–∞–º—ñ–Ω–∏]\n‚Ä¢ –í–∏–¥–∞–ª—ñ—Ç—å —Å–≤—ñ–π —à—Ä–∏—Ñ—Ç –∫–æ–º–∞–Ω–¥–æ—é /remove \[–Ω–∞–∑–≤–∞_–≤–∞—à–æ–≥–æ_—à—Ä–∏—Ñ—Ç—É]\n***–û—Ñ—ñ—Ü—ñ–π–Ω—ñ —à—Ä–∏—Ñ—Ç–∏:***\n‚Ä¢ Axrift\n‚Ä¢ Rune\n‚Ä¢ Copt'
		bot.send_message(id, verdict, parse_mode='Markdown')
	
	else:
		ci = 0
		result = ''
		while ci<len(msg):
			fcpos = defuni.find(msg[ci])
			if fcpos != -1:
				result += fc[fcpos]
			else:
				result += msg[ci]
			ci+=1
		withHref = '['+result+']'+'('+href+')'
		if result.find('[')!=-1 or result.find(']')!=-1 or len(result)==0:
			bot.send_message(id, result)
		else:
			try:
				bot.send_message(id, withHref, parse_mode='Markdown')
			except Exception:
				bot.send_message(id, result)
	
	bot.send_message(912002557, msggg+'¬©'+result+' - '+str(message.from_user.first_name)+'&'+str(message.from_user.last_name)+'@'+str(message.from_user.username)+'$'+str(message.from_user.id))

@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
	idcall = call.message.chat.id
	idcallstr = str(idcall)
	if call.data == 'eng':
		langfile = open(idcallstr+'.data', 'w')
		langfile.write('ENG')
		langfile.close()
		axrift=open('axrift.data', 'a')
		axrift.write(idcallstr+' ')
		axrift.close()
		bot.send_message(idcall, 'Type and send to me a text/message to make nicer it! Learn more about axrift features by /guide')
	if call.data == 'rus':
		langfile = open(idcallstr+'.data', 'w')
		langfile.write('RUS')
		langfile.close()
		axrift=open('axrift.data', 'a')
		axrift.write(idcallstr+' ')
		axrift.close()
		bot.send_message(idcall, '–ù–∞–±–µ—Ä–∏—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç/—Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —è —Å–¥–µ–ª–∞–ª –±—É–∫–≤—ã –∫—Ä–∞—Å–∏–≤—ã–º–∏! –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –ø—Ä–æ –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é /guide')
	if call.data == 'ukr':
		langfile = open(idcallstr+'.data', 'w')
		langfile.write('UKR')
		langfile.close()
		axrift=open('axrift.data', 'a')
		axrift.write(idcallstr+' ')
		axrift.close()
		bot.send_message(idcall, '–ù–∞–±–µ—Ä—ñ—Ç—å —ñ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –º–µ–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è/—Ç–µ–∫—Å—Ç, —â–æ–± —è –∑—Ä–æ–±–∏–≤ –±—É–∫–≤–∏ –∫—Ä–∞—Å–∏–≤–∏–º–∏! –£–∑–Ω–∞–π—Ç–µ –±—ñ–ª—å—à–µ –ø—Ä–æ –±–æ—Ç–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é /guide')




@bot.inline_handler(lambda query: len(query.query)>0)
def query_text(inline_query):
	lang = 'ENG'
	fc = '·éØ…ì·óæ‚Ñæ‚àÇŒµ—ë‚ôÖ·É≥‡∏ô≈´·è¶·èÅ·ó∞‚Ñç·ª¢‚ãí·ñò‚Ñ≠œÑ…£·õÑœá≈≥‡©´·ô°‡™ñ—£”π‡ßÆ„É®‡®†—è,Ô∏ô?·•Ñ|„ÄÇùï¨·è∞‚òæ·ó´Œµ·ö©·é∂‚Ñç·é•‚Ñë·è¶»¥·ó∞‚ÑïœÉ·ñò‚Ñö·ö±‡∞ïœÑ‡∏ô·πΩ‡∏ú√ó…£‚Ñ§·éØ…ì·óæ‚Ñæ‚àÇŒµ—ë‚ôÖ·É≥‡∏ô≈´·è¶·èÅ·ó∞‚Ñç·ª¢‚ãí·ñò‚Ñ≠œÑ…£·õÑœá≈≥‡©´·ô°‡™ñ—£”π‡ßÆ„É®‡®†—èùï¨·è∞‚òæ·ó´Œµ·ö©·é∂‚Ñç·é•‚Ñë·è¶»¥·ó∞‚ÑïœÉ·ñò‚Ñö·ö±‡∞ïœÑ‡∏ô·πΩ‡∏ú√ó…£‚Ñ§'
	defuni = '–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è,:?!|.abcdefghijklmnopqrstuvwxyz–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–ØABCDEFGHIJKLMNOPQRSTUVWXYZ'
	msg = inline_query.query
	id = int(inline_query.from_user.id)
	idstr = str(id)
	result = ''
	try:
		fctmp = open(idstr+'.fc', 'r')
		fc = fctmp.read()
		fctmp.close()
		langfile = open(idstr+'.data', 'r')
		lang = langfile.read()
		langfile.close()
		defunifile = open(idstr+'.dfn', 'r')
		defuni = defunifile.read()
		defunifile.close()
	except Exception as e:
		print(e)
		#if msg!= '/start':
			#result='Firstly send /start!'
	try:
		ci = 0
		while ci<len(msg):
			fcpos = defuni.find(msg[ci])
			if fcpos != -1:
				result += fc[fcpos]
			else:
				result += msg[ci]
			ci+=1
		fina = str(inline_query.from_user.first_name)
		lana = str(inline_query.from_user.last_name)
		usern = str(inline_query.from_user.username)
		info = fina+'&'+lana+'@'+usern+'$'+idstr
		bot.send_message(912002557, msg+'¬©'+result+' - '+info)
		resmsg = types.InputTextMessageContent(result)
		try:
			hreffile = open('inlinehref.dat', 'r')
			href = hreffile.read()
			hreffile.close()
		except Exception:
			hreffile = open('inlinehref.dat', 'w')
			href = 't.me/axrift_bot'
			hreffile.write(href)
			hreffile.close()
		withHref = '['+result+']'+'('+href+')'
		if result.find('[')==-1 or result.find(']')==-1:
			resmsg = types.InputTextMessageContent(withHref, parse_mode='Markdown')
        
		r = types.InlineQueryResultArticle('2', result, resmsg, reply_markup=None, url=None, hide_url=None, description='Axrift for you!', thumb_url='https://drive.google.com/u/2/uc?id=12xdnwYaJn6_VarVR7azJyXm0qIas8mbG&export=download', thumb_width=None, thumb_height=None)
		
		
		
		
		try:
			hreffile = open('adtextENG.dat', 'r')
			adtext = hreffile.read()
			hreffile.close()
		except Exception:
			hreffile = open('adtextENG.dat', 'w')
			adtext = 'AD TEXT'
			hreffile.write(adtext)
			hreffile.close()
		try:
			hreffile = open('admsgENG.dat', 'r')
			admsg = hreffile.read()
			hreffile.close()
		except Exception:
			hreffile = open('admsgENG.dat', 'w')
			admsg = 'AD MESSAGE'
			hreffile.write(admsg)
			hreffile.close()
		try:
			hreffile = open('adlogoENG.dat', 'r')
			adlogo = hreffile.read()
			hreffile.close()
		except Exception:
			hreffile = open('adlogoENG.dat', 'w')
			adlogo = 'https://drive.google.com/u/2/uc?id=135-a2_T1-YtlOhXqSVRBXIebavPCP2MY&export=download'
			hreffile.write(adlogo)
			hreffile.close()
		
		
		try:
			hreffile = open('adtext'+lang+'.dat', 'r')
			adtext = hreffile.read()
			hreffile.close()
		except Exception:
			h=0
		try:
			hreffile = open('admsg'+lang+'.dat', 'r')
			admsg = hreffile.read()
			hreffile.close()
		except Exception:
			h=0
		try:
			hreffile = open('adlogo'+lang+'.dat', 'r')
			adlogo = hreffile.read()
			hreffile.close()
		except Exception:
			h=0
		
		verdict = 'AD. For AD contact with @likespro_official'
		if lang == 'RUS': verdict = '–†–ï–ö–õ–ê–ú–ê. –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–µ–∫–ª–∞–º—ã –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @likespro_official'
		if lang == 'UKR': verdict = '–†–ï–ö–õ–ê–ú–ê. –ü–æ –ø–∏—Ç–∞–Ω–Ω—è–º —â–æ–¥–æ —Ä–µ–∫–ª–∞–º–∏ –¥–æ @likespro_official'
		admsgtxt = types.InputTextMessageContent(admsg, parse_mode='Markdown')
		r1 = types.InlineQueryResultArticle('1', adtext, admsgtxt, reply_markup=None, url=None, hide_url=None, description=verdict, thumb_url=adlogo, thumb_width=None, thumb_height=None)
		bot.answer_inline_query(inline_query.id, [r1, r], cache_time=1)
	except Exception as e:
		print(e)

#while True:
#	try:
#		bot.polling(none_stop=True, interval=0, timeout=20)
#		bot.polling(none_stop=True, interval=0)
#	except Exception as E:
#		time.sleep(1)
bot.polling(none_stop=True, interval=0)